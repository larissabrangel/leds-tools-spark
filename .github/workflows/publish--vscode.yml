name: Publish Langium Extension

on:
  push:
    branches:
      - main
      - developing
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Build project
      - name: Build project
        run: |
          npm run langium:generate
          npm run build

      # Cache Node.js modules and npm cache for faster builds
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Object Tests
        run: npx vitest run test_object

  build-and-publish:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v3

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Build project
      - name: Build project
        run: |
          npm run langium:generate
          npm run build

      # Cache Node.js modules and npm cache for faster builds
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install vsce (VS Code Extension Manager)
      - name: Install vsce
        run: npm install -g @vscode/vsce

      # Publish extension with beta tag
      - name: Publish to VSCode Marketplace (Beta)
        run: |
          if [ "${{ github.repository }}" = "leds-org/leds-tools-spark" ] && [ "${{ github.ref_name }}" = "main" ]; then
            echo "Publishing to VSCode Marketplace..."
            vsce publish --pat ${{ secrets.VSCODE_TOKEN }} --tag beta
          else
            echo "Creating package. Not publishing (either not main branch or not official repo)"
            vsce package
          fi
      
      # # Publish extension based on the branch
      # - name: Publish to VSCode Marketplace
      #   run: |
      #     if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
      #       vsce publish --pat ${{ secrets.VSCODE_TOKEN }}
      #     elif [[ "${{ github.ref }}" == "refs/heads/developing" ]]; then
      #       vsce publish --pre-release --pat ${{ secrets.VSCODE_TOKEN }}
      #     else
      #       echo "Branch is neither main nor developing, skipping publish."
      #     fi
